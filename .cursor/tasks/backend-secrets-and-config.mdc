---
description: Configure secrets and runtime for ElevenLabs and signed URL credentials
globs:
alwaysApply: false
---

id: "TASK-0005"
title: "Add secrets/config for ElevenLabs and signed URLs"
status: "planned"
priority: "P0"
labels: ["backend", "secrets", "config", "gcp"]
created: "2025-08-23"

# 1) High-Level Objective

Enable secure access to ElevenLabs API and signed download URLs in Firebase Functions environments.

# 2) Background / Context (Optional but recommended)

MVP requires ElevenLabs voice synthesis and returning download links via signed URLs.

# 3) Assumptions & Constraints

- ASSUMPTION: GCP Secret Manager is available; project number set via `GCLOUD_PROJECT_NUMBER`.
- Constraint: Do not commit secrets; use env in local dev and Secret Manager in prod.

# 4) Dependencies (Other Tasks or Artifacts)

- files/back/src/apis/Db.py (secret helpers)

# 5) Context Plan

**Beginning (add to model context):**

- back/src/apis/Db.py
- back/.env _(read-only)_

**End state (must exist after completion):**

- Documentation in `README.md` (env vars section)
- back/tests/unit/test_secrets_config.py

# 6) Low-Level Steps (Ordered, information-dense)

1. Document required env vars in `README.md` under Backend setup:

   - `ELEVENLABS_API_KEY` — ElevenLabs API key
   - `SIGNED_URL_SERVICE_ACCOUNT_JSON` — JSON for service account allowed to sign URLs
   - `GCLOUD_PROJECT_NUMBER` — GCP project number for Secret Manager

2. Add unit test `back/tests/unit/test_secrets_config.py` that:
   - Asserts `Db.get_file_url(...)` works when `SIGNED_URL_SERVICE_ACCOUNT_JSON` is present (mock storage and credentials).
   - Asserts ElevenLabs key resolution prefers env then Secret Manager.

# 7) Types & Interfaces (if applicable)

N/A

# 8) Acceptance Criteria

- README documents all necessary env vars and how to set them locally.
- Unit test covers key resolution logic paths.

# 9) Usage Examples (CLI/API)

N/A

# 10) Notes / Links

- GCS Signed URLs doc: `https://cloud.google.com/storage/docs/access-control/signing-urls-with-helpers`.
